DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS vote;
DROP TABLE IF EXISTS note;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS poll;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS lecture;
CREATE TABLE IF NOT EXISTS users (
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    full_name VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(20),
    PRIMARY KEY (username)
);
CREATE TABLE IF NOT EXISTS user_roles (
    user_role_id INTEGER GENERATED ALWAYS AS IDENTITY,
    username VARCHAR(50) NOT NULL,
    role VARCHAR(50) NOT NULL,
    PRIMARY KEY (user_role_id),
    FOREIGN KEY (username) REFERENCES users(username)
    );
create table if not exists lecture (
    id bigint generated by default as identity,
    teacher_name varchar(255),
    lecture_title varchar(255),
    body varchar(255),
    deleted BOOLEAN DEFAULT FALSE,
    primary key (id)
);
create table if not exists note (
    id uuid default random_uuid() not null,
    filename varchar(255),
    content_type varchar(255),
    content blob,
    lecture_id bigint,
    primary key (id),
    foreign key (lecture_id) references lecture
);
CREATE TABLE IF NOT EXISTS poll (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    teacher_name VARCHAR(255) NOT NULL,
    question VARCHAR(255) NOT NULL,
    optionAText VARCHAR(255) NOT NULL,
    optionBText VARCHAR(255) NOT NULL,
    optionCText VARCHAR(255) NOT NULL,
    optionDText VARCHAR(255) NOT NULL,
    deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS vote (
    id uuid default random_uuid() not null,
    username VARCHAR(255) NOT NULL,
    poll_id BIGINT NOT NULL,
    choice VARCHAR(255) NOT NULL,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    primary key (id),
    FOREIGN KEY (username) REFERENCES users(username) ON DELETE CASCADE,
    FOREIGN KEY (poll_id) REFERENCES poll(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    context VARCHAR(255) NOT NULL,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    username VARCHAR(50) NOT NULL,
    lecture_id BIGINT,
    poll_id BIGINT,
    deleted BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (lecture_id) REFERENCES lecture(id),
    FOREIGN KEY (poll_id) REFERENCES poll(id),
    FOREIGN KEY (username) REFERENCES users(username) ON DELETE CASCADE
);